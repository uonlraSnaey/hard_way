关键字：
as	with-as语句的一部分	with X as Y: pass
assert	断言某个表达式为 true（如果为 false，则会触发异常）	assert False. "Error!"
del	从字典中删除	del X[Y]
except	如果例外发生，就执行该语句	except ValueError, e: print(e)
exec    把字符串作为 python 运行	exec 'print("Hello")'
lambda  创建一个短的匿名函数	s = lambda y: y ** y; s(3) 注1
pass	该代码块为空	def empty(): pass
try	尝试执行这个代码块，如果遇到例外，执行 except 语句	try: pass
yield	Pause here and return to caller.	def X(): yield Y; X().next()

注1：输入匿名短函数：s = lambda y: y y，执行该函数 s(3)，输出结果为 27， 为平方运算。lambda 简化了函数定义的书写形式，使代码更为简洁。
注2：with X as Y，X 是一个要被执行的表达式，Y 是变量，它存储的是表达式执行返回的结果。一般用于文件的读写和存储。

数据类型：
True False None bytes strings numbers floats lists 

dicts:	存储一系列“键=值”的元素	e = {'x': 1, 'y': 2}

转义字符	描述
\	反斜杠
\'	单引号
\"	双引号
\a	响铃
\b	退格
\f	换页符
\n	换行符
\r	回车符
\t	Tab 制表符
\v	垂直制表符

python中没有 ++a,--a，a++，--a，有 a += 2...

